
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: modules.pkg.kubepack.com
spec:
  group: pkg.kubepack.com
  names:
    kind: Module
    listKind: ModuleList
    plural: modules
    singular: module
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Module is the Schema for the flows API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ModuleSpec defines the desired state of Module
            properties:
              actions:
                items:
                  properties:
                    chartRef:
                      description: ChartRepoRef references to a single version of
                        a Chart
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                        version:
                          type: string
                      required:
                      - name
                      - version
                      type: object
                    description:
                      type: string
                    name:
                      description: Also the release name
                      type: string
                    overrideValues:
                      items:
                        properties:
                          objref:
                            properties:
                              paths:
                                items:
                                  type: string
                                type: array
                              src:
                                properties:
                                  name:
                                    type: string
                                  nameTemplate:
                                    type: string
                                  selector:
                                    description: A label selector is a label query
                                      over a set of resources. The result of matchLabels
                                      and matchExpressions are ANDed. An empty label
                                      selector matches all objects. A null label selector
                                      matches no objects.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  target:
                                    description: TypeMeta describes an individual
                                      object in an API response or request with strings
                                      representing the type of the object and its
                                      API schema version. Structures that are versioned
                                      or persisted should inline TypeMeta.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                    type: object
                                  useAction:
                                    type: string
                                required:
                                - target
                                - useAction
                                type: object
                            required:
                            - src
                            type: object
                          values:
                            items:
                              description: Check array, map, etc can this be always
                                string like in --set keys? Keep is such that we can
                                always generate helm equivalent command https://helm.sh/docs/intro/using_helm/#the-format-and-limitations-of---set
                              properties:
                                key:
                                  type: string
                                value:
                                  properties:
                                    fieldPath:
                                      description: Directly use path from object
                                      type: string
                                    fieldPathTemplate:
                                      description: 'FieldPathTemplate is a Go text
                                        template that will be evaluated to determine
                                        cell value. Users can use JSONPath expression
                                        to extract nested fields and apply template
                                        functions from Masterminds/sprig library.
                                        The template function for JSON path is called
                                        `jp`. Example: {{ jp "{.a.b}" . }} or {{ jp
                                        "{.a.b}" true }}, if json output is desired
                                        from JSONPath parser'
                                      type: string
                                    raw:
                                      type: string
                                    type:
                                      description: string, nil, null
                                      type: string
                                  required:
                                  - type
                                  type: object
                              required:
                              - key
                              - value
                              type: object
                            type: array
                        required:
                        - values
                        type: object
                      type: array
                    prerequisites:
                      properties:
                        requiredResources:
                          items:
                            description: GroupVersionResource unambiguously identifies
                              a resource.  It doesn't anonymously include GroupVersion
                              to avoid automatic coersion.  It doesn't use a GroupVersion
                              to avoid custom marshalling
                            properties:
                              group:
                                type: string
                              resource:
                                type: string
                              version:
                                type: string
                            required:
                            - group
                            - resource
                            - version
                            type: object
                          type: array
                      type: object
                    readinessCriteria:
                      description: https://github.com/tamalsaha/kstatus-demo
                      properties:
                        requiredResources:
                          items:
                            description: GroupVersionResource unambiguously identifies
                              a resource.  It doesn't anonymously include GroupVersion
                              to avoid automatic coersion.  It doesn't use a GroupVersion
                              to avoid custom marshalling
                            properties:
                              group:
                                type: string
                              resource:
                                type: string
                              version:
                                type: string
                            required:
                            - group
                            - resource
                            - version
                            type: object
                          type: array
                        timeout:
                          type: string
                        waitForReconciled:
                          description: List objects for which to wait to reconcile
                            using kstatus == Current Same as helm --wait
                          type: boolean
                        waitFors:
                          items:
                            properties:
                              all:
                                type: boolean
                              for:
                                type: string
                              labels:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              resource:
                                description: GroupResource specifies a Group and a
                                  Resource, but does not force a version.  This is
                                  useful for identifying concepts during lookup stages
                                  without having partially valid types
                                properties:
                                  group:
                                    type: string
                                  resource:
                                    type: string
                                required:
                                - group
                                - resource
                                type: object
                              timeout:
                                type: string
                            required:
                            - all
                            - for
                            - labels
                            - resource
                            - timeout
                            type: object
                          type: array
                      required:
                      - timeout
                      - waitForReconciled
                      type: object
                    valuesFile:
                      type: string
                    valuesPatch:
                      description: 'RFC 6902 compatible json patch. ref: http://jsonpatch.com'
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  - readinessCriteria
                  type: object
                type: array
              edgeList:
                items:
                  properties:
                    connection:
                      properties:
                        level:
                          type: string
                        nameTemplate:
                          type: string
                        namespacePath:
                          type: string
                        references:
                          description: "References are a jsonpath that returns a CSV
                            formatted references to target resources \n If each row
                            has a single column, it is target name. Target resource
                            is non-namespaced or uses the same namespace as the source
                            resource. Example: n1 n2 \n If each row has two columns,
                            it is target [name,namespace]. Example: n1,ns1 n2,ns2
                            \n If each row has three columns, it is target [name,namespace,kind].
                            Example: n1,ns1,k1 n2,ns2,k2 \n If each row has four columns,
                            it is target [name,namespace,kind,apiGroup]. Example:
                            n1,ns1,k1,apiGroup1 n2,ns2,k2,apiGroup2"
                          items:
                            type: string
                          type: array
                        selector:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        selectorPath:
                          type: string
                        targetLabelPath:
                          description: 'default: metadata.labels'
                          type: string
                        type:
                          enum:
                          - MatchSelector
                          - MatchName
                          - MatchRef
                          - OwnedBy
                          type: string
                      required:
                      - type
                      type: object
                    dst:
                      description: TypeMeta describes an individual object in an API
                        response or request with strings representing the type of
                        the object and its API schema version. Structures that are
                        versioned or persisted should inline TypeMeta.
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      type: object
                    name:
                      type: string
                    src:
                      description: TypeMeta describes an individual object in an API
                        response or request with strings representing the type of
                        the object and its API schema version. Structures that are
                        versioned or persisted should inline TypeMeta.
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                      type: object
                  required:
                  - connection
                  - dst
                  - name
                  - src
                  type: object
                type: array
            required:
            - actions
            type: object
          status:
            description: ModuleStatus defines the observed state of Module
            properties:
              conditions:
                description: Conditions applied to the database, such as approval
                  or denial.
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this resource. It corresponds to the resource's generation,
                  which is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: Specifies the current phase of the database
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
